<h2 id="title">ember-select-guru</h2>

<p>Single</p>
{{ember-select-guru
  value=singleValue
  options=options
  onSearchInputChange=(action "queryTermChanged")
  onSelect=(action "handleSingleSelect")}}

<h2>Multiple</h2>
ember-select-guru allows you to choose multiple items from a defined object in controller. Also, you can remove any item from the list.

{{ember-select-guru
  value=multipleValue
  options=options
  onSearchInputChange=(action "queryTermChanged")
  onSelect=(action "handleMultiSelect")
  multiple=true}}

<p>Example</p>
Below is a example code of component embedded in a template:
<pre>
&#123;&#123;ember-select-guru
  value=multipleValue
  options=options
  onSearchInputChange=(action "queryTermChanged")
  onSelect=(action "handleMultiSelect")
  multiple=true}}
</pre>
You can pass through `options` an array of objects which serves data.

The controller requires the action such as
<pre>
handleMultiSelect(options) {
  this.set('multipleValue', options);
}
</pre>
and don't forgot about setting `multipleValue` as an empty array. It could be done in setup controller and it is important during first initializing a controller.

<p>Remote</p>
{{ember-select-guru
  value=remoteValue
  options=remoteOptions
  onSearchInputChange=(action "remoteQueryTermChanged")
  onSelect=(action "handleRemoteSelect")}}

<h2>Custom search</h2>

You can change the attribute that is used for filtering options by providing a value for the <code>searchKey</code> property.

<pre>
&#123;{ember-select-guru
  value=singleValue
  options=options
  <strong>searchKey='description'</strong>
  onSearchInputChange=(action "queryTermChanged")
  onSelect=(action "handleSingleSelect")}}
</pre>

We decided to search by the options <code>description</code> attribute. The options we have are as follows:

<pre>
[
  {
    name: '123',
    description: 'one hundred twenty-three'
  },
  {
    name: '456',
    description: 'four hundred fifty-six'
  },
  {
    name: '758',
    description: 'seven hundred fifty-eight'
  }
]
</pre>

{{ember-select-guru
  value=singleValue
  options=options
  searchKey='description'
  onSearchInputChange=(action "queryTermChanged")
  onSelect=(action "handleSingleSelect")}}
